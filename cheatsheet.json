{
  "cli": {
    "pwd": "Display the current directory path",
    "cd <PATH>": "Change the current working directory to `<PATH>`",
    "cd ~": "Change the current working directory to the user's home directory",
    "cd ..": "Move up one folder",
    "cd ../..": "Move up two folders",
    "clear": "Clears content of of your terminal window",
    "ls": "List files and folders in the current working directory",
    "ls <PATH>": "List files and folders in `<PATH>`",
    "ls -a": "List all files (including hidden files) in the current working directory",
    "ls -alh": "List all files in a long format that is easy to read for humans",
    "[Command] --help": "Provides all possible flags for a specific command (on Windows)",
    "man [Command]": "Provides all possible flags for a specific command (on Mac OS)",
    "mkdir <FOLDER>": "Create a new folder, called `<FOLDER>`",
    "mkdir <FOLDER1> <FOLDER2>": "Create two separate folders, called <FOLDER1> and <FOLDER2>",
    "touch <FILE>": "Create a new empty file, called `<FILE>`",
    "open <FILE>": "Opens the file called <FILE> (On macOS)",
    "echo 'example text' >> file.txt": "Writes 'example text' into `file.txt`",
    "cat <FILE>": "Displays the content of <FILE>",
    "start <FILE>": "Opens the file called <FILE> (On Windows)",
    "mv FILE.txt <FOLDER>": "Move `FILE.txt` into `<FOLDER>`",
    "mv <FOLDER_OLD> <FOLDER_NEW>": "Rename `<FOLDER_OLD>` to `<FOLDER_NEW>`",
    "ls -alh *.csv": "Use a wildcard to list all `.csv` files",
    "rm -r <FOLDER>": "Remove the folder `<FOLDER>`"
  },
  "config": {
    "git config": "Overview of config commands",
    "git config --global user.name": "Set Username",
    "git config --global user.email": "Set Email",
    "git config --global core.editor": "Set Editor",
    "git config --global init.defaultBranch main": "Set default branch name",
    "git config --list": "View set configurations"
  },
  "basic": {
    "git init": "Initialize folder as Git Repository",
    "git status": "View Git tracking status of files in Repository",
    "git add": "Add file to staging area",
    "git commit": "Commit staged files",
    "git log": "View past commits",
    "git diff": "View made changes compared to the last commit"
  },
  "github": {
    "git clone": "Create a local copy of a repository",
    "git pull": "Fetches and merges the latest changes from a remote repository into your current branch",
    "git fetch": "Updates your remote tracking branches",
    "git push": "Upload your local commits to a remote repository",
    "git blame": "shows the authorship and commit information of each line in a file",
    "git remote": "manages remote repositories"
    },
  "branches": {
    "git branch": "Listing/creating/deleting branches",
    "git switch": "Switching branches",
    "git checkout": "Switching branches",
    "git merge": "Merging branches",
    "git rebase": "A different way of integrating changes from two branches"
  },
  "stashing": {
    "git stash": "Stores made changes for later use",
    "git stash -m stashing message": "Stashes your changes and includes a message",
    "git stash list":"Shows all of your stored stashes", 
    "git stash apply": "Applies your latest stash",
    "git stash apply stash@{n}": "Applies a specific stash",
    "git stash pop": "Applies your latest stash and removes it from stash list",
    "git stash pop stash@{n}": "Applies a specific stash and removes it from stash list",
    "git restore <file>": "Reverts <file> back to the state of your last commit",
    "git restore .": "Reverts all files in your repository back to the state of your last commit",
    "git restore --staged <file>": "Removes <file> from your staging area",
    "git restore --staged .": "Removes all files in your repository from your staging area",
    "git rm <file>": "Deletes <file> from your repository",
    "git rm --cached <file>": "Removes <file> from your repository but keeps  <file> on your system",
    "git revert <commithash>": "Creates a new commit which reverts your repository back to <commithash>",
    "git reflog": "Logs recent branch changes",
    "git reset <commithash>": "Resets the branch to a specified commit, keeping changes in the working directory",
    "git reset --hard <commithash>": "Resets the branch to a specified commit",
    "git cherry-pick <commithash>": "Applies changes from <commithash>",
    "git clean": "Deletes untracked files from your directory",
    "git rebase": "Different way of integrating changes from two branches"
  },
  "Tags and Releases": {
    "git tag": "Lists all tags",
    "git tag v1.0": "Creates a tag on the basis of your current commit named `v1.0`",
    "git tag v1.1 <commit-hash>": "Creates a tag on the basis of a specific commit hash named `v1.1`",
    "git tag -a v1.0 -m Release version 1.0": "Creates an annotated tag on the basis of your current commit hash named `v1.0` with the tagging message `Release version 1.0` ",
    "git push origin <tag-name>": "Pushes a specific tag to remote",
    "git push origin --tags": "Pushes all created tags to remote",
    "git fetch --tags": "Fetches all created tags from remote",
    "git pull --tags": "Pulls all created tags from remote"
  },
  "rewriting_history": {
    "git filter-repo --invert-paths --path < PATH-TO-FILE-YOU-WANT-TO-REMOVE >": "Remove specified file from your repository history",
    "brew install git-filter-repo": "Installs git filter-repo using brew"
  }
}