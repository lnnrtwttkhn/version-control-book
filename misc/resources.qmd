# Resources {.unnumbered}

## Git for beginners

### The Turing Way: Version Control

The [Turing Way](https://www.turing.ac.uk/research/research-projects/turing-way) is a community-driven, open-source project developed by [The Alan Turing Institute](https://www.turing.ac.uk). 
Its primary goal is to provide guidance on conducting reproducible, ethical, and collaborative data science. T
The project aims to make data science accessible and inclusive by offering a set of resources, guidelines, and best practices.
The Turing way handbook is organized into multiple chapters, each focusing on different aspects of data science and research methodology. 
The chapter on Version Control in The Turing Way Handbook is dedicated to teaching users the fundamentals and benefits of using version control systems, with a particular focus on Git. 
It not only teaches the technical aspects of version control but also embeds these practices within the broader context of reproducibility and collaboration in research.

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| output: asis
bibtexkeys = c("community2022")
knitr::kable(ref_table(bibtexkeys), format = "markdown")
```

### Software Carprentry: Version Control with Git

[The Carpentries](https://carpentries.org) is a non-profit organization that teaches foundational coding, data science, and computational skills to researchers, scientists, educators, and data professionals. 
The Carpentries organizes and runs workshops around the world, focusing on teaching foundational skills in programming, version control, data analysis, and more.
[Software Carpentry](https://software-carpentry.org/lessons/index.html) is one of the key programs under the broader Carpentries umbrella, focused on teaching researchers and professionals foundational software skills that are essential for effective and reproducible computational research.
The "Software Carpentry: Version Control" with Git session is a good, comprehensive and beginner-friendly introduction to Git.
However, topics like branching strategies, rebasing, stashing, and cherry-picking, which are crucial for more complex workflows, are not covered. 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| output: asis
bibtexkeys = c("koziar2023")
knitr::kable(ref_table(bibtexkeys), format = "markdown")
```

### Pro Git

The Pro Git book is a standard resource for learning Git, offering a comprehensive and in-depth guide to version control with Git. 
Written by Scott Chacon and Ben Straub, the book covers everything from the basics of Git to advanced topics like branching strategies, workflows, and Git internals. 
The book is available for free online, making it an excellent resource for anyone looking to deepen their understanding of Git.
However, the Pro Git book can be dense, and some sections may feel overwhelming for newcomers. Additionally, while itâ€™s very thorough, users looking for quick, specific answers might find the book's extensive coverage a bit too detailed. 
Despite these drawbacks, the Pro Git book is one of the best resources available for mastering Git.

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| output: asis
bibtexkeys = c("chacon2014")
knitr::kable(ref_table(bibtexkeys), format = "markdown")
```

## GitHub 

### Official GitHub documentation

The official GitHub resources are essential for anyone working with Git and GitHub. 
They offer clear, detailed guidance on using GitHub for version control, collaboration, and project management, covering everything from basic Git commands to advanced features like Actions, Pull Requests, and Issues. 
The documentation is well-organized and comprehensive.
A downside is that the documentation can sometimes be overwhelming due to its depth and the wide range of topics it covers.

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| output: asis
bibtexkeys = c("GitHub2023")
knitr::kable(ref_table(bibtexkeys), format = "markdown")
```

## Git with R

### Happy Git with R

[Jennifer Bryan](https://jennybryan.org) is a prominent figure in the data science and statistics community, particularly known for her work in the R programming language. She is a statistician, data scientist, educator, and open-source advocate with a record in the fields of data analysis, data visualization, and reproducible research.
"Happy Git with R" is a user-friendly guide authored by her that focuses on helping R users integrate Git and GitHub into their data science workflows. 
The guide is particularly useful for those working in data science and using R, providing clear, step-by-step instructions on how to use version control and collaboration tools.


```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| output: asis
bibtexkeys = c("bryan2023")
knitr::kable(ref_table(bibtexkeys), format = "markdown")
```

## DataLad

[DataLad](https://www.datalad.org) is an open-source tool designed for the management, sharing, and reproducibility of large-scale data and code, particularly in research environments. 
It builds on top of Git and [Git-annex](https://git-annex.branchable.com) to provide a version control system for data, making it easier for researchers to handle datasets that are too large to be efficiently managed by Git alone.

### Official DataLad documentation

The DataLad documentation is a comprehensive resource that provides users with guidance on how to use DataLad for managing, sharing, and reproducibly analyzing data.
It is available online as the DataLad Handbook and is designed to be a practical, user-friendly guide for both beginners and advanced users of DataLad.

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| output: asis
bibtexkeys = c("wagner2021")
knitr::kable(ref_table(bibtexkeys), format = "markdown")
```