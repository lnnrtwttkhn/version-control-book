[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Version Control of Code and Data for Scientists",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "contents.html",
    "href": "contents.html",
    "title": "1  Contents",
    "section": "",
    "text": "The estimate of the reading time for each chapter is computed by counting the words in the chapter and assuming a reading speed of 200 words per minute.\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Modified - Oldest\n        \n         \n          Modified - Newest\n        \n         \n          Reading Time (Low to High)\n        \n         \n          Reading Time (High to Low)\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nRewriting history\n\n\n\n\n\n\n\n\n\n\n\n\n7 min\n\n\nJuly 7, 2023\n\n\n\n\n\n\n  \n\n\n\n\nContributing\n\n\n\n\n\n\n\n\n\n\n\n\n11 min\n\n\nJuly 7, 2023\n\n\n\n\n\n\n  \n\n\n\n\nStyle Guide\n\n\n\n\n\n\n\n\n\n\n\n\n2 min\n\n\nJuly 7, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "chapters/rewriting-history.html#how-to-avoid-accidental-commits",
    "href": "chapters/rewriting-history.html#how-to-avoid-accidental-commits",
    "title": "2  Rewriting history",
    "section": "2.1 How to avoid accidental commits",
    "text": "2.1 How to avoid accidental commits\nThere are a few simple tricks to avoid committing things you don’t want committed:\n\nUse a visual program like GitHub Desktop or gitk to commit changes. Visual programs generally make it easier to see exactly which files will be added, deleted, and modified with each commit.\nAvoid the catch-all commands git add . and git commit -a on the command line—use git add filename and git rm filename to individually stage files, instead.\nUse git add --interactive to individually review and stage changes within each file.\nUse git diff --cached to review the changes that you have staged for commit. This is the exact diff that git commit will produce as long as you don’t use the -a flag.\n\nYou accidentally added a large file to a previous commit.\nNow you want to remove the file but keep all commits that came afterwards."
  },
  {
    "objectID": "chapters/rewriting-history.html#purging-a-file-from-your-repositorys-history",
    "href": "chapters/rewriting-history.html#purging-a-file-from-your-repositorys-history",
    "title": "2  Rewriting history",
    "section": "2.2 Purging a file from your repository’s history",
    "text": "2.2 Purging a file from your repository’s history\n\n\n\n\n\n\nNote\n\n\n\nIf sensitive data is located in a file that’s identified as a binary file, you’ll need to remove the file from the history, as you can’t modify it to remove or replace the data.\n\n\n\n2.2.1 Using the BFG\nTODO: TBA\n\n\n2.2.2 Using git filter-repo\n\n\n\n\n\n\nWarning\n\n\n\nWarning: If you run git filter-repo after stashing changes, you won’t be able to retrieve your changes with other stash commands. Before running git filter-repo, we recommend unstashing any changes you’ve made. To unstash the last set of changes you’ve stashed, run git stash show -p | git apply -R. For more information, see Git Tools - Stashing and Cleaning.\n\n\nTo illustrate how git filter-repo works, we’ll show you how to remove your file with sensitive data from the history of your repository and add it to .gitignore to ensure that it is not accidentally re-committed.\n\n\n\n\n\n\nInstall git filter-repo\n\n\n\n\n\nInstall the latest release of the git filter-repo tool. You can install git-filter-repo manually or by using a package manager. For example, to install the tool with HomeBrew on macOS, use the brew install command.\n\nbrew install git-filter-repo\n\nFor more information, see INSTALL.md in the newren/git-filter-repo repository.\n\n\n\n\n\n2.2.3 Clone the repository\nIf you don’t already have a local copy of your repository with sensitive data in its history, clone the repository to your local computer.\n\n112git clone https://github.com/YOUR-USERNAME&gt;/YOUR-REPOSITORY\n\n\n1\n\nReplace YOUR-USERNAME with your GitHub username and YOUR-REPOSITORY with the name of your GitHub repository.\n\n\n\n\n\n\n2.2.4 Navigate into the repository’s working directory\nNavigate into the repository’s working directory.\n\n1cd YOUR-REPOSITORY\n# TODO: add reference to command line chapter\n\n\n1\n\nReplace YOUR-REPOSITORY with the name of your GitHub repository. For details on the cd command, see the chapter on command line.\n\n\n\n\n\n\n2.2.5 Run git filter-repo command\nRun the following command, replacing PATH-TO-FILE-YOU-WANT-TO-REMOVE with the path to the file you want to remove, not just its file name. These arguments will:\n\nForce Git to process, but not check out, the entire history of every branch and tag\nRemove the specified file, as well as any empty commits generated as a result\nRemove some configurations, such as the remote URL, stored in the .git/config file. You may want to back up this file in advance for restoration later.\nOverwrite your existing tags\n\n\n1git filter-repo --invert-paths --path PATH-TO-FILE-YOU-WANT-TO-REMOVE\n\n\n1\n\nReplace PATH-TO-FILE-YOU-WANT-TO-REMOVE with the path to the file you want to remove, not just its file name.\n\n\n\n\n\n\n\n\n\n\nI did not clone a fresh copy of the repository. Is this a problem?\n\n\n\n\n\nIf you did not clone a fresh copy of your repository, you may see this message after running the git filter-repo command:\n\nAborting: Refusing to destructively overwrite repo history since\nthis does not look like a fresh clone.\n  (expected freshly packed repo)\nPlease operate on a fresh clone instead.  If you want to proceed\nanyway, use --force.\n\nAs described in the message, you have two options:\n\nClone a fresh copy of your repository and execute the command there.\nAdd --force to proceed with the existing repository.\n\n\n\n\n\n2.2.5.1 Add your file to .gitignore\nAdd your file to .gitignore to ensure that you don’t accidentally commit it again. You can edit .gitignore in your favorite text editor\n\n1echo \"PATH-TO-FILE-YOU-WANT-TO-REMOVE\" &gt;&gt; .gitignore\ngit add .gitignore\ngit commit -m \"Add YOUR-FILE-WITH-SENSITIVE-DATA to .gitignore\"\n\n\n1\n\nThis command writes PATH-TO-FILE-YOU-WANT-TO-REMOVE inside the .gitignore file. &gt;&gt; makes sure that this is written to a new line inside the .gitignore file.\n\n\n\n\nThis will create the following output:\n\n[main 64dda05] Add YOUR-FILE-WITH-SENSITIVE-DATA to .gitignore\n 1 files changed, 1 insertions(+), 0 deletions(-)\n\n\n\n\n2.2.6 Double-check the state of your repository\nDouble-check that you’ve removed everything you wanted to from your repository’s history, and that all of your branches are checked out.\n\n\n2.2.7 Force-push your local changes to GitHub\nIf you are happy with the state of your repository, force-push your local changes to overwrite your repository on github.com/, as well as all the branches you’ve pushed up. A force push is required to remove sensitive data from your commit history.\n\ngit push origin --force --all\n\n\n\nOutput\n\n\nCounting objects: 1074, done.\nDelta compression using 2 threads.\nCompressing objects: 100% (677/677), done.\nWriting objects: 100% (1058/1058), 148.85 KiB, done.\nTotal 1058 (delta 590), reused 602 (delta 378)\nTo https://github.com/YOUR-USERNAME/YOUR-REPOSITORY.git\n  + 48dc599...64dda05 main -&gt; main (forced update)\n\n\n\n\n\n\n\n\nfatal: ‘origin’ does not appear to be a git repository\n\n\n\n\n\nDid you receive this error message?\n\nfatal: 'origin' does not appear to be a git repository\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n\nAs described above, this could mean that origin was removed from your repo. Configure origin again:\n\nSSHHTTPS\n\n\n\ngit remote add origin https://github.com/YOUR-USERNAME/YOUR-REPOSITORY\n\n\n1\n\nReplace YOUR-USERNAME with your GitHub username and YOUR-REPOSITORY with the name of your GitHub repository.\n\n\n\n\n\n\n\ngit remote add origin git@github.com:YOUR-USERNAME/YOUR-REPOSITORY.git\n\n\n2\n\nReplace &lt;YOUR-USERNAME&gt; with your GitHub username and &lt;YOUR-REPOSITORY&gt; with the name of your GitHub repository.\n\n\n\n\n\n\n\n\n\n\nIn order to remove the sensitive file from your tagged releases, you’ll also need to force-push against your Git tags:\n\ngit push origin --force --tags\n\n\n\nOutput\n\n\nCounting objects: 321, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (166/166), done.\nWriting objects: 100% (321/321), 331.74 KiB | 0 bytes/s, done.\nTotal 321 (delta 124), reused 269 (delta 108)\nTo https://github.com/YOUR-USERNAME/YOUR-REPOSITORY.git\n + 48dc599...051452f main -&gt; main (forced update)"
  },
  {
    "objectID": "chapters/rewriting-history.html#fully-removing-the-data-from-github",
    "href": "chapters/rewriting-history.html#fully-removing-the-data-from-github",
    "title": "2  Rewriting history",
    "section": "2.3 Fully removing the data from GitHub",
    "text": "2.3 Fully removing the data from GitHub\nAfter using either the BFG tool or git filter-repo to remove the sensitive data and pushing your changes to GitHub, you must take a few more steps to fully remove the data from GitHub.\n\nContact GitHub Support, asking them to remove cached views and references to the sensitive data in pull requests on GitHub. Please provide the name of the repository and/or a link to the commit you need removed.\nTell your collaborators to rebase, not merge, any branches they created off of your old (tainted) repository history. One merge commit could reintroduce some or all of the tainted history that you just went to the trouble of purging.\nAfter some time has passed and you’re confident that the BFG tool / git filter-repo had no unintended side effects, you can force all objects in your local repository to be dereferenced and garbage collected with the following commands (using Git 1.8.5 or newer)\n\n\n$ git for-each-ref --format=\"delete %(refname)\" refs/original | git update-ref --stdin\n$ git reflog expire --expire=now --all\n$ git gc --prune=now\n&gt; Counting objects: 2437, done.\n&gt; Delta compression using up to 4 threads.\n&gt; Compressing objects: 100% (1378/1378), done.\n&gt; Writing objects: 100% (2437/2437), done.\n&gt; Total 2437 (delta 1461), reused 1802 (delta 1048)\n\nNote: You can also achieve this by pushing your filtered history to a new or empty repository and then making a fresh clone from GitHub."
  },
  {
    "objectID": "chapters/rewriting-history.html#references",
    "href": "chapters/rewriting-history.html#references",
    "title": "2  Rewriting history",
    "section": "2.4 References",
    "text": "2.4 References\n\nhttps://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "4  References",
    "section": "",
    "text": "Allaire, J. J., Charles Teague, Yihui Xie, and Christophe Dervieux.\n2022. “Quarto.” https://doi.org/10.5281/zenodo.5960048.\nLicense: GNU GPL\nv2.\n\n\nChacon, Scott, and Ben Straub. 2014. Pro Git. Apress. https://doi.org/10.1007/978-1-4842-0076-6.\nLicense: CC BY-NC.\n\n\nThe Turing Way Community. 2022. The Turing Way: A Handbook for\nReproducible, Ethical and Collaborative Research. Zenodo. https://doi.org/10.5281/zenodo.3233853.\nLicense: The process documents and data are made available under a CC BY 4.0\nlicense. Software are made available under an MIT license."
  },
  {
    "objectID": "chapters/contributing.html#overview",
    "href": "chapters/contributing.html#overview",
    "title": "5  Contributing",
    "section": "5.1 Overview",
    "text": "5.1 Overview\nSection 5.2: This section explains how to use RStudio Project to work on this project.\nSection 5.3: This section explains how to use Quarto to work on this project.\nSection 5.4: This section explains how this project manages package dependencies using renv.\nSection 5.6: This section explains how to add code snippets.\nSection 5.7: This section explains how to add images.\nSection 5.5: This section explains how to add references.\nSection 5.8: This section explains how to use variables.\nSection 5.9: This section explains how to add icons."
  },
  {
    "objectID": "chapters/contributing.html#sec-rstudio-project",
    "href": "chapters/contributing.html#sec-rstudio-project",
    "title": "5  Contributing",
    "section": "5.2 RStudio Project",
    "text": "5.2 RStudio Project\n\n “Using RStudio Projects”\n\nWe recommend working in RStudio and open the RStudio Project.\n\n RStudio Terminal\n\n\n\nDouble-click on the project file version-control-book.Rproj within your computer’s file system (for example, macOS Finder).\n\n\n\nIn the Terminal, run:\n\nopen version-control-book.Rproj\n\nThis will open the RStudio Project in RStudio.\n\n\n\n\n\nClick here to view the full version-control-book.Rproj file of this project.\n\n\n\n\nversion-control-book.Rproj\n\nVersion: 1.0\n\nRestoreWorkspace: No\nSaveWorkspace: No\nAlwaysSaveHistory: No\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n\nBuildType: Makefile"
  },
  {
    "objectID": "chapters/contributing.html#sec-quarto",
    "href": "chapters/contributing.html#sec-quarto",
    "title": "5  Contributing",
    "section": "5.3 Quarto",
    "text": "5.3 Quarto\nThis book is made with Quarto.\n\n5.3.1 Local development\n\n5.3.1.1 Setup\n\nRead the Get Started chapter of the Quarto documentation, which includes details on installation.\n\n\n\n5.3.1.2 Preparation\n\nRead this guide on how to contribute.\nFamiliarize yourself with Quarto Books.\n\n\n\n5.3.1.3 Local preview\n\nquarto preview\n\n\n\n\n5.3.2 Add a new chapter\n\nCreate a new Quarto document inside the /chapters/ folder\nAdd the new chapter to _quarto.yml. Don’t forget to specify the full path (including /chapters/)\n\n\n\n\n_quarto.yml (excerpt)\n\nchapters:\n  - index.qmd\n1  - chapters/YOUR-NEW-CHAPTER.qmd\n  - another-chapter.qmd\n\n\n\n1\n\nReplace YOUR-NEW-CHAPTER with a concise filename.\n\n\n\n\n\n\nClick here to view the full _quarto.yml file of this project.\n\n\n\n\n_quarto.yml\n\nproject:\n  # project options (https://quarto.org/docs/reference/projects/options.html):\n  type: book\n  output-dir: _book\n  execute-dir: project\n  # pre-render: make download-images\n  # preview (https://quarto.org/docs/reference/projects/options.html#preview):\n  preview: \n    port: 3333\n    host: 127.0.0.1\n    browser: true\n    watch-inputs: true\n    navigate: true\n\nbook:\n  title: \"Version Control of Code and Data for Scientists\"\n  search: true\n  repo-url: https://github.com/lnnrtwttkhn/version-control-book/\n  repo-branch: main\n  repo-actions: [issue, source]\n  downloads: [pdf, epub]\n  sharing: [twitter, facebook]\n  favicon: static/git-icon.svg\n  twitter-card: false\n  site-url: https://lennartwittkuhn.com/version-control-book\n#  date: \"6/3/2023\"\n  chapters:\n    - index.qmd\n    - contents.qmd\n    - chapters/rewriting-history.qmd\n    - summary.qmd\n    - references.qmd\n    - part: Contributing to this book\n      chapters:\n        - chapters/contributing.qmd\n        - chapters/style-guide.qmd\n  page-navigation: true\n\nformat:\n  html:\n    theme: cosmo\n    # fontcolor: black\n    # linkcolor: black\n    link-external-newwindow: true\n    toc: true\n    toc-depth: 3\n    toc-title: \"On this page\"\n    number-sections: true\n    anchor-sections: true\n    # layout (https://quarto.org/docs/reference/formats/html.html#layout):\n    fig-cap-location: margin\n    page-layout: full\n    title-block-style: default\n    # code (https://quarto.org/docs/reference/formats/html.html#code):\n    code-fold: false\n    code-overflow: wrap\n    code-line-numbers: false\n    code-copy: true\n    code-link: false\n    code-annotations: hover\n    code-tools: false\n    highlight-style: monokai\n    # references:\n    bibliography: references.bib\n    csl: chicago-author-date-note.csl\n    citations-hover: true\n    citation-location: document\n    citeproc: true\n    # footnotes:\n    footnotes-hover: true\n    # includes:\n    include-after-body: plausible.html\n\nmetadata-files:\n  - _authors.yml\n  - _affiliations.yml"
  },
  {
    "objectID": "chapters/contributing.html#sec-dependency-management",
    "href": "chapters/contributing.html#sec-dependency-management",
    "title": "5  Contributing",
    "section": "5.4 Dependency Management",
    "text": "5.4 Dependency Management\nWe use renv for project-local  dependency management. For details on renv, see the renv documentation.\n\n5.4.1 Using renv for the first time\nAfter you open the Rstudio Project, you will (hopefully) see a similar output in the RStudio console:\n\n# Bootstrapping renv 0.17.3 --------------------------------------------------\n* Downloading renv 0.17.3 ... OK (downloaded binary)\n* Installing renv 0.17.3 ... Done!\n* Successfully installed and loaded renv 0.17.3.\n* Project '~/version-control-book' loaded. [renv 0.17.3]\n* This project contains a lockfile, but none of the recorded packages are installed.\n* Use `renv::restore()` to restore the project library.\n\nThis output tells you that (1) renv was automatically installed and loaded, (2) the renv environment for the project was loaded, and (3) that none of packages recorded in the renv lockfile are installed.\nThe renv lockfile captures the state of the package library of the project at some point in time. It is defining the version of renv used when generating the lockfile, the version of  used in that project, the R repositories that were active when the lockfile was created and the package records defining each  package, their version, and their installation source. For details on the anatomy of renv.lock, see this section in the renv documentation.\n\n\nClick here to view the full renv.lock file of this project.\n\n\n\n\nrenv.lock\n\n{\n  \"R\": {\n    \"Version\": \"4.3.0\",\n    \"Repositories\": [\n      {\n        \"Name\": \"CRAN\",\n        \"URL\": \"https://cran.rstudio.com\"\n      }\n    ]\n  },\n  \"Packages\": {\n    \"R6\": {\n      \"Package\": \"R6\",\n      \"Version\": \"2.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"470851b6d5d0ac559e9d01bb352b4021\"\n    },\n    \"base64enc\": {\n      \"Package\": \"base64enc\",\n      \"Version\": \"0.1-3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"543776ae6848fde2f48ff3816d0628bc\"\n    },\n    \"bslib\": {\n      \"Package\": \"bslib\",\n      \"Version\": \"0.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"cachem\",\n        \"grDevices\",\n        \"htmltools\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"memoise\",\n        \"mime\",\n        \"rlang\",\n        \"sass\"\n      ],\n      \"Hash\": \"1b117970533deb6d4e992c1b34e9d905\"\n    },\n    \"cachem\": {\n      \"Package\": \"cachem\",\n      \"Version\": \"1.0.8\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"fastmap\",\n        \"rlang\"\n      ],\n      \"Hash\": \"c35768291560ce302c0a6589f92e837d\"\n    },\n    \"cli\": {\n      \"Package\": \"cli\",\n      \"Version\": \"3.6.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"89e6d8219950eac806ae0c489052048a\"\n    },\n    \"data.table\": {\n      \"Package\": \"data.table\",\n      \"Version\": \"1.14.8\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"b4c06e554f33344e044ccd7fdca750a9\"\n    },\n    \"digest\": {\n      \"Package\": \"digest\",\n      \"Version\": \"0.6.31\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"8b708f296afd9ae69f450f9640be8990\"\n    },\n    \"ellipsis\": {\n      \"Package\": \"ellipsis\",\n      \"Version\": \"0.3.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"rlang\"\n      ],\n      \"Hash\": \"bb0eec2fe32e88d9e2836c2f73ea2077\"\n    },\n    \"evaluate\": {\n      \"Package\": \"evaluate\",\n      \"Version\": \"0.21\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"d59f3b464e8da1aef82dc04b588b8dfb\"\n    },\n    \"fastmap\": {\n      \"Package\": \"fastmap\",\n      \"Version\": \"1.1.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"f7736a18de97dea803bde0a2daaafb27\"\n    },\n    \"fontawesome\": {\n      \"Package\": \"fontawesome\",\n      \"Version\": \"0.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"htmltools\",\n        \"rlang\"\n      ],\n      \"Hash\": \"1e22b8cabbad1eae951a75e9f8b52378\"\n    },\n    \"fs\": {\n      \"Package\": \"fs\",\n      \"Version\": \"1.6.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"94af08e0aa9675a16fadbb3aaaa90d2a\"\n    },\n    \"glue\": {\n      \"Package\": \"glue\",\n      \"Version\": \"1.6.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"4f2596dfb05dac67b9dc558e5c6fba2e\"\n    },\n    \"here\": {\n      \"Package\": \"here\",\n      \"Version\": \"1.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"rprojroot\"\n      ],\n      \"Hash\": \"24b224366f9c2e7534d2344d10d59211\"\n    },\n    \"highr\": {\n      \"Package\": \"highr\",\n      \"Version\": \"0.10\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"xfun\"\n      ],\n      \"Hash\": \"06230136b2d2b9ba5805e1963fa6e890\"\n    },\n    \"htmltools\": {\n      \"Package\": \"htmltools\",\n      \"Version\": \"0.5.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"digest\",\n        \"ellipsis\",\n        \"fastmap\",\n        \"grDevices\",\n        \"rlang\",\n        \"utils\"\n      ],\n      \"Hash\": \"ba0240784ad50a62165058a27459304a\"\n    },\n    \"jquerylib\": {\n      \"Package\": \"jquerylib\",\n      \"Version\": \"0.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"htmltools\"\n      ],\n      \"Hash\": \"5aab57a3bd297eee1c1d862735972182\"\n    },\n    \"jsonlite\": {\n      \"Package\": \"jsonlite\",\n      \"Version\": \"1.8.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"methods\"\n      ],\n      \"Hash\": \"3ee4d9899e4db3e976fc82b98d24a31a\"\n    },\n    \"knitr\": {\n      \"Package\": \"knitr\",\n      \"Version\": \"1.43\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"evaluate\",\n        \"highr\",\n        \"methods\",\n        \"tools\",\n        \"xfun\",\n        \"yaml\"\n      ],\n      \"Hash\": \"9775eb076713f627c07ce41d8199d8f6\"\n    },\n    \"lifecycle\": {\n      \"Package\": \"lifecycle\",\n      \"Version\": \"1.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"rlang\"\n      ],\n      \"Hash\": \"001cecbeac1cff9301bdc3775ee46a86\"\n    },\n    \"magrittr\": {\n      \"Package\": \"magrittr\",\n      \"Version\": \"2.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"7ce2733a9826b3aeb1775d56fd305472\"\n    },\n    \"memoise\": {\n      \"Package\": \"memoise\",\n      \"Version\": \"2.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"cachem\",\n        \"rlang\"\n      ],\n      \"Hash\": \"e2817ccf4a065c5d9d7f2cfbe7c1d78c\"\n    },\n    \"mime\": {\n      \"Package\": \"mime\",\n      \"Version\": \"0.12\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"tools\"\n      ],\n      \"Hash\": \"18e9c28c1d3ca1560ce30658b22ce104\"\n    },\n    \"rappdirs\": {\n      \"Package\": \"rappdirs\",\n      \"Version\": \"0.3.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"5e3c5dc0b071b21fa128676560dbe94d\"\n    },\n    \"renv\": {\n      \"Package\": \"renv\",\n      \"Version\": \"0.17.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"utils\"\n      ],\n      \"Hash\": \"4543b8cd233ae25c6aba8548be9e747e\"\n    },\n    \"rlang\": {\n      \"Package\": \"rlang\",\n      \"Version\": \"1.1.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"a85c767b55f0bf9b7ad16c6d7baee5bb\"\n    },\n    \"rmarkdown\": {\n      \"Package\": \"rmarkdown\",\n      \"Version\": \"2.22\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"bslib\",\n        \"evaluate\",\n        \"fontawesome\",\n        \"htmltools\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"knitr\",\n        \"methods\",\n        \"stringr\",\n        \"tinytex\",\n        \"tools\",\n        \"utils\",\n        \"xfun\",\n        \"yaml\"\n      ],\n      \"Hash\": \"75a01be060d800ceb14e32c666cacac9\"\n    },\n    \"rprojroot\": {\n      \"Package\": \"rprojroot\",\n      \"Version\": \"2.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"1de7ab598047a87bba48434ba35d497d\"\n    },\n    \"sass\": {\n      \"Package\": \"sass\",\n      \"Version\": \"0.4.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R6\",\n        \"fs\",\n        \"htmltools\",\n        \"rappdirs\",\n        \"rlang\"\n      ],\n      \"Hash\": \"cc3ec7dd33982ef56570229b62d6388e\"\n    },\n    \"stringi\": {\n      \"Package\": \"stringi\",\n      \"Version\": \"1.7.12\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"stats\",\n        \"tools\",\n        \"utils\"\n      ],\n      \"Hash\": \"ca8bd84263c77310739d2cf64d84d7c9\"\n    },\n    \"stringr\": {\n      \"Package\": \"stringr\",\n      \"Version\": \"1.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"rlang\",\n        \"stringi\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"671a4d384ae9d32fc47a14e98bfa3dc8\"\n    },\n    \"tinytex\": {\n      \"Package\": \"tinytex\",\n      \"Version\": \"0.45\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"xfun\"\n      ],\n      \"Hash\": \"e4e357f28c2edff493936b6cb30c3d65\"\n    },\n    \"vctrs\": {\n      \"Package\": \"vctrs\",\n      \"Version\": \"0.6.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\"\n      ],\n      \"Hash\": \"d0ef2856b83dc33ea6e255caf6229ee2\"\n    },\n    \"xfun\": {\n      \"Package\": \"xfun\",\n      \"Version\": \"0.39\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"stats\",\n        \"tools\"\n      ],\n      \"Hash\": \"8f56e9acb54fb525e66464d57ab58bcb\"\n    },\n    \"yaml\": {\n      \"Package\": \"yaml\",\n      \"Version\": \"2.3.7\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"0d0056cc5383fbc240ccd0cb584bf436\"\n    }\n  }\n}\n\n\n\n\n\n5.4.2 Restoring renv\nIf renv is activated but it recognized that (not all of) the packages listed in the renv.lock file are installed, renv will suggest to restore the project library using renv::restore():\n\n* This project contains a lockfile, but none of the recorded packages are installed.\n* Use `renv::restore()` to restore the project library.\n\n\nrenv::restore()\n\nThis will generate a list of files that will be updated.\n\n\nClick here to view an example output of the renv::restore() command.\n\n\nThe following package(s) will be updated:\n\n# CRAN ===============================\n- R6            [* -&gt; 2.5.1]\n- base64enc     [* -&gt; 0.1-3]\n- bslib         [* -&gt; 0.5.0]\n- cachem        [* -&gt; 1.0.8]\n- cli           [* -&gt; 3.6.1]\n- data.table    [* -&gt; 1.14.8]\n- digest        [* -&gt; 0.6.31]\n- ellipsis      [* -&gt; 0.3.2]\n- evaluate      [* -&gt; 0.21]\n- fastmap       [* -&gt; 1.1.1]\n- fontawesome   [* -&gt; 0.5.1]\n- fs            [* -&gt; 1.6.2]\n- glue          [* -&gt; 1.6.2]\n- here          [* -&gt; 1.0.1]\n- highr         [* -&gt; 0.10]\n- htmltools     [* -&gt; 0.5.5]\n- jquerylib     [* -&gt; 0.1.4]\n- jsonlite      [* -&gt; 1.8.5]\n- knitr         [* -&gt; 1.43]\n- lifecycle     [* -&gt; 1.0.3]\n- magrittr      [* -&gt; 2.0.3]\n- memoise       [* -&gt; 2.0.1]\n- mime          [* -&gt; 0.12]\n- rappdirs      [* -&gt; 0.3.3]\n- rlang         [* -&gt; 1.1.1]\n- rmarkdown     [* -&gt; 2.22]\n- rprojroot     [* -&gt; 2.0.3]\n- sass          [* -&gt; 0.4.6]\n- stringi       [* -&gt; 1.7.12]\n- stringr       [* -&gt; 1.5.0]\n- tinytex       [* -&gt; 0.45]\n- vctrs         [* -&gt; 0.6.3]\n- xfun          [* -&gt; 0.39]\n- yaml          [* -&gt; 2.3.7]\n\nDo you want to proceed? [y/N]: \n\n\nIf you want to proceed with the update, type y and hit enter.\n\n\n5.4.3 Adding / removing packages\nInstall packages:\n\n1install.packages(\"PACKAGE_NAME\")\n2renv::install(\"PACKAGE_NAME\")\n\n\n1\n\nReplace PACKAGE_NAME with the actual name of the package that you want to install.\n\n2\n\nReplace PACKAGE_NAME with the actual name of the package that you want to install.\n\n\n\n\nRemove packages:\n\n1remove.packages(\"PACKAGE_NAME\")\n2renv::remove(\"PACKAGE_NAME\")\n\n\n1\n\nReplace PACKAGE_NAME with the actual name of the package that you want to remove.\n\n2\n\nReplace PACKAGE_NAME with the actual name of the package that you want to remove.\n\n\n\n\nCall renv::snapshot() to save the new state of the project library to the renv.lock:\n\nrenv::snapshot()\n\n\n\n5.4.4 Commit your changes\nThe renv.lock is checked into version control, so after you updated it, make a new commit:\n\ngit add renv.lock\n1git commit -m \"add package PACKAGE_NAME to renv\"\n\n\n1\n\nReplace PACKAGE_NAME with the actual name of the package that you installed. Adapt the commit message as needed."
  },
  {
    "objectID": "chapters/contributing.html#sec-references",
    "href": "chapters/contributing.html#sec-references",
    "title": "5  Contributing",
    "section": "5.5 References",
    "text": "5.5 References\n\n “Citations & Footnotes” in the Quarto documentation.\n HTML options for references.\n\n\n5.5.1 Cite a reference\nReferences are stored in references.bib.\n\n\nClick here to view the full references.bib file of this project.\n\n\n\n\nreferences.bib\n\n@book{community2022,\n    title = {The Turing Way: A handbook for reproducible, ethical and collaborative research},\n    author = {{The Turing Way Community}},\n    year = {2022},\n    month = {07},\n    date = {2022-07-27},\n    publisher = {Zenodo},\n    doi = {10.5281/zenodo.3233853},\n    url = {https://zenodo.org/record/3233853},\n    note = {License: The process documents and data are made available under a \\href{https://creativecommons.org/licenses/by/4.0/}{CC BY 4.0 license}. Software are made available under an \\href{https://opensource.org/license/mit/}{MIT license}.}\n}\n\n@book{chacon2014,\n    title = {Pro Git},\n    author = {Chacon, Scott and Straub, Ben},\n    year = {2014},\n    date = {2014},\n    publisher = {Apress},\n    doi = {10.1007/978-1-4842-0076-6},\n    url = {http://dx.doi.org/10.1007/978-1-4842-0076-6},\n    note = {License: CC BY-NC}\n}\n\n@software{allaire2022,\n    title = {Quarto},\n    author = {Allaire, J.J. and Teague, Charles and Xie, Yihui and Dervieux, Christophe},\n    year = {2022},\n    month = {01},\n    date = {2022-01-10},\n    doi = {10.5281/zenodo.5960048},\n    url = {https://github.com/quarto-dev/quarto-cli},\n    version = {1.2},\n    note = {License: \\href{https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html}{GNU GPL v2}}\n}\n\n@article{millman2018,\n    title = {Teaching Computational Reproducibility for Neuroimaging},\n    author = {Millman, K. Jarrod and Brett, Matthew and Barnowski, Ross and Poline, Jean-Baptiste},\n    year = {2018},\n    month = {10},\n    date = {2018-10-22},\n    journal = {Frontiers in Neuroscience},\n    volume = {12},\n    doi = {10.3389/fnins.2018.00727},\n    url = {http://dx.doi.org/10.3389/fnins.2018.00727},\n    note = {License: \\href{https://creativecommons.org/licenses/by/4.0/}{CC BY 4.0}}\n}\n\n@article{milligan2014,\n    title = {Introduction to the Bash Command Line},\n    author = {Milligan, Ian and Baker, James},\n    editor = {Crymble, Adam},\n    year = {2014},\n    month = {09},\n    date = {2014-09-20},\n    journal = {Programming Historian},\n    number = {3},\n    doi = {10.46430/phen0037},\n    url = {http://dx.doi.org/10.46430/phen0037},\n    langid = {en}\n}\n\n@misc{mcbain2019,\n  author = {McBain, Miles},\n  title = {Git for Scientists},\n  year = {2019},\n  url = {https://milesmcbain.github.io/git_4_sci/},\n  note = {License: \\href{http://creativecommons.org/licenses/by-sa/4.0/}{CC BY-SA 4.0}. Source: \\href{https://github.com/MilesMcBain/git_4_sci/}{https://github.com/MilesMcBain/git_4_sci/}}\n}\n\n\n\nUse the citation handle of the .bib-entry that you want to cite. For example use @chacon2014 to cite Chacon and Straub (2014). For details, see teh chapter on “Citations & Footnotes” in the Quarto documentation. Add the specific references that you used to the bottom of the document. If the reference consists of multiple chapters and pages, try to specify the exact chapter or page.\n\n\n5.5.2 Add a new reference\n\nOpen references.qmd\nSwitch to the Visual Quarto editor.\nMove the cursor into any place in the document.\nClick on Insert and select @ Citation ...\nIf the reference has a DOI:\nSelect From DOI\nPaste the DOI\nSelect Insert\nThis should add the new reference to references.bib.\nMove the citation key to the correct place\n\n\n\n5.5.3 Add license information\nWe want to keep track of license information. If you add a new reference, please add the license information manually.\n\nGo to references.bib and find the reference.\nInside the .bib-entry for the reference add a new field called note that includes the license information.\n\n\n@book{\n  note = {License: CC BY-NC}\n}\n\nFor example, this is the references for Chacon and Straub (2014):\n\n@book{chacon2014,\n    title = {Pro Git},\n    author = {Chacon, Scott and Straub, Ben},\n    year = {2014},\n    date = {2014},\n    publisher = {Apress},\n    doi = {10.1007/978-1-4842-0076-6},\n    url = {http://dx.doi.org/10.1007/978-1-4842-0076-6},\n    note = {License: CC BY-NC}\n}"
  },
  {
    "objectID": "chapters/contributing.html#sec-code",
    "href": "chapters/contributing.html#sec-code",
    "title": "5  Contributing",
    "section": "5.6 Code",
    "text": "5.6 Code\n\n “HTML Code Blocks” in the Quarto documentation\n\n\n5.6.1 Add code snippets\nAdd code snippets to a Quarto document like this:\n```{bash}\ngit status\n```\n\n\n\n\n\n\nDisable code execution in all Quarto documents by default!\n\n\n\nPlace the following code in the YAML header of each Quarto document:\n\nengine: knitr\nexecute:\n  eval: false\n\n\n\nExample: Click here for the YAML header of the current document.\n\n\n\n\nchapters/contributing.qmd\n\n---\ntitle: \"Contributing\"\nengine: knitr\nexecute:\n  eval: false\ntitle-block-style: none\n\n\n\n\n\nClick here to learn more.\n\nQuarto enables the inclusion of executable code blocks in Markdown. This empowers users to create reproducible documents and reports, as the code needed for generating the output is embedded within the document and automatically executed during rendering.\nHowever, in this guide, we usually only want to display code but not execute it! We therefore need to disable code execution in the YAML header of each Quarto document.\nThe YAML header in a Quarto document is used to specify important metadata and settings for the document. It is typically placed at the top of the document enclosed between three dashes (---) to separate it from the main content. The YAML header provides instructions to the Quarto rendering engine on how to process and present the document.\n\n\n\n\n\n5.6.2 Reference external code\nYou can reference external code. For example, the following code block will:\n\n\n\n\n\n\n\n\n\n\n\n\n\ndescription\ncode\n\n\n\n\n1\nreference the _quarto.yml file\n#&#124; file: _quarto.yml\n\n\n2\ndisplay the first five lines of code\necho=c(1:5)\n\n\n3\nadd code line numbers\n#&#124; code-line-numbers: true\n\n\n4\nadd a filename to the code block\nfilename=\"_quarto.yml\"\n\n\n\n\n```{bash, filename=\"_quarto.yml\", echo=c(1:5)}\n#| file: _quarto.yml\n#| code-line-numbers: true\n```\n\n\nClick here for the output of this example.\n\n\n\n\n_quarto.yml\n\nproject:\n  # project options (https://quarto.org/docs/reference/projects/options.html):\n  type: book\n  output-dir: _book\n  execute-dir: project\n\n\n\n\n\n5.6.3 Add code annotations\n\n “Code Annotation” in the Quarto documentation\n\n\nCode blocks and executable code cells in Quarto can include line-based annotations. Line-based annotations provide a way to attach explanation to lines of code much like footnotes.\n\nFor example, this is a code annotation for the git status command:\n```{bash}\ngit status # &lt;1&gt;\n```\n1. `git status` displays the state of the working directory and the staging area."
  },
  {
    "objectID": "chapters/contributing.html#sec-images",
    "href": "chapters/contributing.html#sec-images",
    "title": "5  Contributing",
    "section": "5.7 Images",
    "text": "5.7 Images\n\n5.7.1 Background\nImages are stored in a NextCloud folder. They are downloaded into the /static folder using the command specified in the Makefile.\n\n\n5.7.2 Installation\nYou need to install the following packages:\n\nGNU Wget\nGNU Make\n\n\n\n\n\n\nPrerequisite: Install Homebrew\n\n\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n\nAfter you installed Homebrew, install GNU Wget\n\n\nbrew install wget\n\nGNU Make should already be installed. Try by entering the following command into the Terminal:\n\nmake --version\n\n\n\nTBA\n\n\nTBA\n\n\n\n\n\n5.7.3 Retrieve images\nAfter you installed all the required software, run this command:\n\nmake download-images\n\n\n\n\n\n\n\nWhat’s a Makefile and what does it do?\n\n\n\n\n\n\n\n\nMakefile\n\n# define URL to Nextcloud where static files are stored:\nIMAGES_URL=https://cloud.uni-hamburg.de/s/aD7NTNB9f4NDorT/download\n# define a name for the .zip-archive with the cloud contents:\nIMAGES_ARCHIVE=version-control-book.zip\n# define the name of the local folder:\nIMAGES_DIR=static/\n\n# define the default targets of the make command\nall: download-images\n\n# download and extract images:\ndownload-images:\n    wget $(IMAGES_URL) -O $(IMAGES_ARCHIVE)\n    unzip -j -o $(IMAGES_ARCHIVE) -d $(IMAGES_DIR)\n    rm -f $(IMAGES_ARCHIVE)\n\n# clean downloaded images folder:\nclean:\n    rm -rf $(IMAGES_DIR)*\n\n\n\n\n\n\n\n5.7.4 Add a new image\n\nBecome a collaborator on the UHH Cloud folder.\nGo to the UHH Cloud folder.\nPlace the new image inside the folder. Please use - to separate word in the filename.\nReference the image in the Quarto document relative to the root of the project directory:\n\n\n![](static/NEW-IMAGE.png)\n\n\n\n5.7.5 Download images in pre-render command\nIt’s also possible to include the make download-images as a project script in the pre-render script. This would re-execute make download-images before every render. For the moment, we disabled this option, but it can be enabled in _quarto.yml."
  },
  {
    "objectID": "chapters/contributing.html#sec-variables",
    "href": "chapters/contributing.html#sec-variables",
    "title": "5  Contributing",
    "section": "5.8 Variables",
    "text": "5.8 Variables\n\n “Variables” in the Quarto documentation\n\nQuarto offers a number of ways to include dynamic variables within documents. Dynamic variables are useful for externalizing content that varies depending on context, or as an alternative to repeating a value in multiple places.\nIn this project, we use a project-level _variables.yml file to define variables. Variables can be either simple values or can include arbitrary Markdown content.\n\n\n\n_variables.yml (excerpt)\n\nlinks:\n  nextcloud: https://cloud.uni-hamburg.de/s/aD7NTNB9f4NDorT\n\n\n\n\nClick here to view the full _variables.yml file of this project.\n\n\n\n\n_variables.yml\n\n# https://quarto.org/docs/authoring/variables.html\nlinks:\n  nextcloud: https://cloud.uni-hamburg.de/s/aD7NTNB9f4NDorT\n\nlanguage:\n  dont:\n    yes: \"don't\"\n    no: \"do not\"\n  folder:\n    yes: \"folder\"\n    no: \"directory\"\n  documentation:\n    yes: \"documentation\"\n    no: \"docs\"\n\n\n\nThe var shortcode then allows to include references to those variables within any document in this project. For example, to include the link to the Nextcloud folder that stores static contents (images etc.) as a variable in a document, use {{&lt; var links.nextcloud &gt;}}.\nFor more details on variables, read the chapter on Variables in the Quarto documentation."
  },
  {
    "objectID": "chapters/contributing.html#sec-icons",
    "href": "chapters/contributing.html#sec-icons",
    "title": "5  Contributing",
    "section": "5.9 Fontawesome Icons",
    "text": "5.9 Fontawesome Icons\n\n Font Awesome Extension for Quarto\n Free Font Awesome icons\n\nWe use the Font Awesome Extension for Quarto to include Font Awesome icons.\n\nThis extension provides support including free icons provided by Font Awesome. Icons can be used in both HTML (via Font Awesome 6 Free) and PDF (via the fontawesome5 LaTeX package).\n\nThis extension includes support for only free Font Awesome icons.\nTo embed an icon, use the {{&lt; fa &gt;}} shortcode. For example, {{&lt; fa thumbs-up &gt;}} will result in . For details, see the project documentation on GitHub."
  },
  {
    "objectID": "chapters/contributing.html#sec-acknowledgements",
    "href": "chapters/contributing.html#sec-acknowledgements",
    "title": "5  Contributing",
    "section": "5.10 Acknowledgements & Attribution",
    "text": "5.10 Acknowledgements & Attribution\n\nThe Quarto documentation (Allaire et al. 2022), in particular the chapters on Variables, Quarto Extensions, “Code Annotation” (License: GNU GPL v2)\n(blischak2016?)\nThe Font Awesome Extension for Quarto (License: MIT)\n\n\n\n\n\nAllaire, J. J., Charles Teague, Yihui Xie, and Christophe Dervieux. 2022. “Quarto.” https://doi.org/10.5281/zenodo.5960048. License: GNU GPL v2.\n\n\nChacon, Scott, and Ben Straub. 2014. Pro Git. Apress. https://doi.org/10.1007/978-1-4842-0076-6. License: CC BY-NC."
  },
  {
    "objectID": "chapters/style-guide.html#summary",
    "href": "chapters/style-guide.html#summary",
    "title": "6  Style Guide",
    "section": "6.1 Summary",
    "text": "6.1 Summary\n\nWrite one sentence per line\nUse consistent language"
  },
  {
    "objectID": "chapters/style-guide.html#write-one-sentence-per-line",
    "href": "chapters/style-guide.html#write-one-sentence-per-line",
    "title": "6  Style Guide",
    "section": "6.2 Write one sentence per line",
    "text": "6.2 Write one sentence per line\nPlease write each sentence on a new line. Having each sentence on a new line will make no difference to how the text is displayed, there will still be paragraphs, but it will mean that any pull requests will be easier to check; the changes will be on a single line instead of somewhere in a paragraph. Consider the example below.\nToday you are you, that is truer than true. There is no one alive who is youer than you. - Dr Seuss\nA pull request on this correcting it to have a ‘.’ after Dr would show as a change to the whole paragraph. Contrast this with the next example which will be displayed online in the exact same way, but would see a change to a single line.\nToday you are you, that is truer than true.\nThere is no one alive who is youer than you.\n- Dr Seuss"
  },
  {
    "objectID": "chapters/style-guide.html#use-consistent-language",
    "href": "chapters/style-guide.html#use-consistent-language",
    "title": "6  Style Guide",
    "section": "6.3 Use consistent language",
    "text": "6.3 Use consistent language\nWe try to use consistent language:\n\n\n\n\n\n\n\nTRUE\nFALSE\n\n\n\n\ndon’t\ndo not\n\n\nfolder\ndirectory\n\n\ndocumentation\ndocs"
  },
  {
    "objectID": "chapters/style-guide.html#acknowledgements-attribution",
    "href": "chapters/style-guide.html#acknowledgements-attribution",
    "title": "6  Style Guide",
    "section": "6.4 Acknowledgements & Attribution",
    "text": "6.4 Acknowledgements & Attribution\n\nThe Turing Way Community (2022): Style Guide\n\n\n\n\n\nThe Turing Way Community. 2022. The Turing Way: A Handbook for Reproducible, Ethical and Collaborative Research. Zenodo. https://doi.org/10.5281/zenodo.3233853. License: The process documents and data are made available under a CC BY 4.0 license. Software are made available under an MIT license."
  }
]