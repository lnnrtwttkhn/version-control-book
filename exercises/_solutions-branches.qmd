1. Optional: Navigate into the project repository using `cd` (or a similar path).
1. Create a new branch called `feature` using `git branch feature`.
1. Switch to the new branch using `git switch feature`.
You can also create and switch the branch in one step using `git checkout -b feature`.
1. Add a new entry to your project text file file.
You can use your regular text editor.
Here, we add a new entry from the command line using `cat`.
1. Stage and commit the changes to your project text file using `git add` and `git commit`.
1. View the contents of your project text file to verify your changes.
Here, we use the `cat` command again.
1. Switch back to the default branch (`main` in this example).
Here, we use `git checkout main` but you can also use `git switch main`.
1. View the contents of your project text file again to confirm that the previous changes do not exist on the `main` branch.
1. Merge the changes `feature` branch into the `main` branch.
1. Delete the merged `feature` branch using `git branch -d feature`.
1. View the contents of your project text file yet again to confirm that the previous changes have been merged into the `main` branch.