---
title: "Installation & Setup"
engine: knitr
execute:
  eval: false
---

::: {.callout-note}
### Overview
:::: {.columns}
::: {.column width="33%"}
#### Test {.unnumbered}

{{< fa clock >}} Duration: 20 min

:::
::: {.column width="33%"}
contents...
:::
::: {.column width="33%"}
contents...
:::
::::



:::

::: {.callout-tip}
### Questions
{{< fa clock >}} Duration: 20 min
:::

::: {.callout-tip}
### Overview
{{< fa clock >}} Duration: 20 min
:::

2.1.1 {{< fa question >}} Questions

- What tools do I need to partake in this workshop?
- How can I install the tools I need for my platform?

2.1.2 Objectives

- Get set up for learning git/GitHub and some command line.
- Understand how to access the command line and git.

::: {.callout-note}
### Acknowledgements and attribution
These setup instructions are adapted from instructions that are copyright Software Carpentry and made available for re-use by them under the CC BY 4.0 license.
:::

## JupyterHub

https://code.min.uni-hamburg.de/


2.2 Software Setup


The task here is to get you setup with 3 main components:

    git - the version control software we will be studying
    Atom - a text editor with good integration with git/GitHub
    GitHub Account - access to the famed online git hosting service.

## {{< fa brands git-alt >}} Git

### {{< fa brands windows >}} Windows

Video Tutorial

The following instructions are for git for Windows 2.19.1 installer:

    Download the Git for Windows installer.
    Run the installer and follow the steps bellow:
        Click on “Next” to use the default install location.
        Click on “Next” to use the default install components.
        Click on “Next” to use the default Start Menu folder.
        Click on “Next” to use the default editor, we will change it later.
        Keep “Use Git from the Windows Command Prompt” selected and click on “Next”. If you forgot to do this programs that you need for the workshop will not work properly. If this happens rerun the installer and select the appropriate option.
        Click on “Next” to use OpenSSL library.
        Keep “Checkout Windows-style, commit Unix-style line endings” selected and click on “Next”.
        Keep “Use Windows’ default console window” selected and click on “Next”.
        Keep “Enable file systen caching” and “Enable Git Credential Manager” selected and click on “Next”.
        Do not enable experimental updates. Click on “Install”.
        Uncheck “View Release Notes”. Click on “Finish”.
    If your “HOME” environment variable is not set (or you don’t know what this is):
        Open command prompt (Open Start Menu then type cmd and press [Enter])
        Type the following line into the command prompt window exactly as shown:

    setx HOME "%USERPROFILE%"

        Press [Enter], you should see SUCCESS: Specified value was saved.
        Quit command prompt by typing exit then pressing [Enter]

This will provide you with both Git and Bash in the Git Bash program.

### {{< fa brands apple >}} macOS

Check if you can access the "Terminal".

::: {.callout-tip collapse="true"}
### Question: Where is the Terminal?
The Terminal can be found at `/Applications/Utilities/Terminal.app` or by searching the Spotlight for "Terminal".
You may want to keep Terminal in your dock to find it more easily.
:::

#### Option 1

Open the terminal and type:

```{bash}
git --version
````

If git is not installed you will get a prompt asking you if you wish to install it along with Xcode command line tools.
You may be asked for your administrator password.

#### Option 2

Download and run the installer from: https://git-scm.com/download/mac.
Hit ‘Continue’ through the prompts without modifying the installation destination or other settings.
You may be asked for your administrator password.

### {{< fa brands linux >}} Linux

Check if you have git installed by opening your terminal and running:

```{bash}
git --version
```

If git is not installed, install it using your package manager, e.g., by running the following command in the terminal:

```{bash}
sudo apt-get install git
````

## {{< fa brands github >}} GitHub

1. Open [https://github.com](https://github.com) in your browser
1. Click the `Sign up` button
1. Enter the required personal details for step 1
1. Note if you use a ‘.edu’ email it will be slightly easier to get unlimited private repos for free with an educational discount. Although you can change this later.
1. In step 2 select the free plan.
1. In step 3 you have the option to fill out a survey or immediately hit submit.

### Register for educational discount

1. Open [https://education.github.com/](https://education.github.com/) in your browser and log in to GitHub if prompted
1. Click "Join GitHub Education"
1. Select the category that describes you, most likely the category that describes you, most likely ‘Researcher.’
1. Fill in the rest of your details, you will need to supply an .edu email, and a brief description of your planned GitHub usage. You might say “To version and share research projects.”

